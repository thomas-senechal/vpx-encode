name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build_tool: cargo
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            build_tool: cross
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build_tool: cargo
          - target: x86_64-apple-darwin
            os: macos-latest
            build_tool: cargo
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install prerequisites for MacOS
        run: |
          brew install libvpx 
        if: startsWith(matrix.os, 'macos-')

      - name: Install prerequisites for Ubuntu
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libvpx-dev libxcb-randr0-dev libxv-dev libvdpau-dev libxcb-shm0-dev
        if: startsWith(matrix.os, 'ubuntu-')

      - name: Install prerequisites for Windows
        run: |
          curl -sSfL -O  https://github.com/ShiftMediaProject/libvpx/releases/download/v1.12.0/libvpx_v1.12.0_msvc16.zip
          unzip libvpx_v1.12.0_msvc16.zip -d $HOME\unzipped
          Add-Content -Path $env:GITHUB_ENV -Value "VPX_STATIC=1"
          Add-Content -Path $env:GITHUB_ENV -Value "VPX_VERSION=1.12.0"
          Add-Content -Path $env:GITHUB_ENV -Value "VPX_LIB_DIR=$HOME\unzipped\lib\x64"
          Add-Content -Path $env:GITHUB_ENV -Value "VPX_INCLUDE_DIR=$HOME\unzipped\include"
        if: startsWith(matrix.os, 'windows-')

      # Using latest cross instead of the old in crate.io
      - name: Install cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: record-screen
          target: ${{ matrix.target }}
          build_tool: ${{ matrix.build_tool }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
